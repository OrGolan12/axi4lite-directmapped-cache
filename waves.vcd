$date
	Thu Aug 14 11:33:42 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module core_translator_tb $end
$var wire 1 ! s_wready $end
$var wire 1 " s_rvalid $end
$var wire 2 # s_rresp [1:0] $end
$var wire 32 $ s_rdata [31:0] $end
$var wire 1 % s_bvalid $end
$var wire 2 & s_bresp [1:0] $end
$var wire 1 ' s_awready $end
$var wire 1 ( s_arready $end
$var wire 3 ) dbg_w_state [2:0] $end
$var wire 2 * dbg_r_state [1:0] $end
$var wire 4 + core_req_wstrb [3:0] $end
$var wire 1 , core_req_we $end
$var wire 32 - core_req_wdata [31:0] $end
$var wire 1 . core_req_valid $end
$var wire 32 / core_req_addr [31:0] $end
$var parameter 32 0 ADDR_WIDTH $end
$var parameter 32 1 DATA_WIDTH $end
$var reg 1 2 clk $end
$var reg 1 3 core_req_ready $end
$var reg 1 4 core_resp_is_write $end
$var reg 32 5 core_resp_rdata [31:0] $end
$var reg 2 6 core_resp_resp [1:0] $end
$var reg 1 7 core_resp_valid $end
$var reg 1 8 rst_n $end
$var reg 32 9 s_araddr [31:0] $end
$var reg 1 : s_arvalid $end
$var reg 32 ; s_awaddr [31:0] $end
$var reg 1 < s_awvalid $end
$var reg 1 = s_bready $end
$var reg 1 > s_rready $end
$var reg 32 ? s_wdata [31:0] $end
$var reg 4 @ s_wstrb [3:0] $end
$var reg 1 A s_wvalid $end
$var integer 32 B issue_stall_cnt [31:0] $end
$scope module dut $end
$var wire 1 C addr_hazard $end
$var wire 1 2 clk $end
$var wire 1 D core_busy $end
$var wire 1 3 core_req_ready $end
$var wire 1 . core_req_valid $end
$var wire 1 , core_req_we $end
$var wire 1 4 core_resp_is_write $end
$var wire 32 E core_resp_rdata [31:0] $end
$var wire 2 F core_resp_resp [1:0] $end
$var wire 1 7 core_resp_valid $end
$var wire 2 G dbg_r_state [1:0] $end
$var wire 3 H dbg_w_state [2:0] $end
$var wire 1 8 rst_n $end
$var wire 32 I s_araddr [31:0] $end
$var wire 1 : s_arvalid $end
$var wire 32 J s_awaddr [31:0] $end
$var wire 1 ' s_awready $end
$var wire 1 < s_awvalid $end
$var wire 1 = s_bready $end
$var wire 2 K s_bresp [1:0] $end
$var wire 1 % s_bvalid $end
$var wire 32 L s_rdata [31:0] $end
$var wire 1 > s_rready $end
$var wire 2 M s_rresp [1:0] $end
$var wire 1 " s_rvalid $end
$var wire 32 N s_wdata [31:0] $end
$var wire 1 ! s_wready $end
$var wire 4 O s_wstrb [3:0] $end
$var wire 1 A s_wvalid $end
$var wire 1 P write_addr_valid $end
$var wire 1 Q w_req_pend $end
$var wire 1 ( s_arready $end
$var wire 1 R read_addr_valid $end
$var wire 1 S r_req_pend $end
$var wire 4 T core_req_wstrb [3:0] $end
$var wire 32 U core_req_wdata [31:0] $end
$var wire 32 V core_req_addr [31:0] $end
$var parameter 32 W ADDR_WIDTH $end
$var parameter 32 X DATA_WIDTH $end
$var parameter 1 Y WRITE_OVER_READ $end
$var reg 2 Z b_hold_resp [1:0] $end
$var reg 1 [ b_hold_valid $end
$var reg 1 \ grant_r $end
$var reg 1 ] grant_w $end
$var reg 32 ^ r_araddr_q [31:0] $end
$var reg 32 _ r_hold_data [31:0] $end
$var reg 2 ` r_hold_resp [1:0] $end
$var reg 1 a r_hold_valid $end
$var reg 2 b r_state [1:0] $end
$var reg 2 c r_state_n [1:0] $end
$var reg 32 d w_awaddr_q [31:0] $end
$var reg 3 e w_state [2:0] $end
$var reg 3 f w_state_n [2:0] $end
$var reg 32 g w_wdata_q [31:0] $end
$var reg 4 h w_wstrb_q [3:0] $end
$upscope $end
$scope task defaults $end
$upscope $end
$scope task pulse $end
$upscope $end
$upscope $end
$scope module core_translator_tb $end
$scope module dut $end
$upscope $end
$scope task defaults $end
$upscope $end
$scope task pulse $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
0Y
b100000 X
b100000 W
b100000 1
b100000 0
$end
#0
$dumpvars
bx h
bx g
b0 f
bx e
bx d
b0 c
bx b
xa
bx `
bx _
bx ^
x]
x\
x[
bx Z
bx V
bx U
bx T
xS
xR
xQ
xP
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
b0 F
bx E
xD
xC
b0 B
0A
bx @
bx ?
0>
0=
0<
bx ;
0:
bx 9
08
07
b0 6
bx 5
04
03
02
bx /
x.
bx -
x,
bx +
bx *
bx )
x(
x'
bx &
x%
bx $
bx #
x"
x!
$end
#5000
b0 /
b0 V
0P
0.
0C
b0 +
b0 T
b0 -
b0 U
0D
1'
1!
0\
0,
0]
b0 $
b0 L
b0 _
b0 #
b0 M
b0 `
0"
0a
b0 &
b0 K
b0 Z
0%
0[
b0 ^
b0 h
b0 g
b0 d
0S
0R
1(
b0 *
b0 G
b0 b
0Q
b0 )
b0 H
b0 e
12
#10000
02
#15000
12
#20000
02
#25000
12
#30000
02
#35000
12
#40000
02
#45000
18
12
#50000
02
#55000
12
#60000
02
#65000
12
#70000
02
#75000
12
#80000
02
#85000
12
#90000
02
#95000
b10000 d
b1 f
1<
b10000 ;
b10000 J
12
#100000
02
#105000
1P
0'
b1 )
b1 H
b1 e
b1 f
0<
12
#110000
02
#115000
12
#120000
02
#125000
12
#130000
02
#135000
12
#140000
02
#145000
b1111 h
b11011110101011011011111011101111 g
b11 f
1A
b1111 @
b1111 O
b11011110101011011011111011101111 ?
b11011110101011011011111011101111 N
12
#150000
02
#155000
0!
1Q
b11 )
b11 H
b11 e
b11 f
0A
12
#160000
02
#165000
b100 f
b10000 /
b10000 V
b11011110101011011011111011101111 -
b11011110101011011011111011101111 U
b1111 +
b1111 T
1.
1,
1]
b1 B
13
12
#170000
02
#175000
1D
b10 B
0Q
b100 )
b100 H
b100 e
b100 f
03
12
#180000
02
#185000
b0 B
12
#190000
02
#195000
1%
1[
b0 f
17
14
12
#200000
02
#205000
0D
0P
1'
1!
0%
0[
b0 )
b0 H
b0 e
b0 f
1=
07
12
#210000
02
#215000
0=
12
#220000
02
#225000
12
#230000
02
#235000
12
#240000
02
#245000
12
#250000
02
#255000
12
#260000
02
#265000
12
